# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file


    - name: Build and publish
      run: |          
        version="`if [[ $GITHUB_REF == refs\/tags* ]]; then echo ${GITHUB_REF//refs\/tags\//}; fi`"
        sed -i "s/^teavm.project.version=.*/teavm.project.version=$version/" gradle.properties
        ./gradlew publishToMavenLocal
        source .github/actions/tools/uploadToMaven.sh
        ls ~/.m2/repository/
        registry="https://maven.pkg.github.com/$GITHUB_REPOSITORY"
        uploadAllToMaven ~/.m2/repository/ $registry "token" ${{ secrets.GITHUB_TOKEN }}
        registry="https://repo.repsy.io/mvn/${{ secrets.REPSY_REPO }}"
        uploadAllToMaven ~/.m2/repository/ $registry ${{secrets.REPSY_USER}} ${{ secrets.REPSY_PASSWORD }}
